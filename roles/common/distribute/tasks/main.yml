---
- name: Ensure required directories exist
  become: true
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ certs_dir }}"
    - "{{ etcd_dir }}"

- name: Create reset-env.sh script for cleaning up controller VMs
  become: true
  copy:
    dest: reset-env.sh
    content: |
      #!/bin/bash

      # Brutal Force-Kill
      for service in etcd kube-apiserver kube-controller-manager kube-scheduler nginx; do \
        sudo apt purge -y nginx
        sudo systemctl stop $service.service
        sudo systemctl disable $service.service
      done

      # Clean services and files
      sudo rm -rf \
        {{ certs_dir }} \
        {{ etcd_dir }} \
        /etc/systemd/system/etcd.service \
        /etc/systemd/system/kube-* \
        /var/lib/kubernetes/*
      
      # Clean binaries
      sudo rm -rf /usr/local/bin/*

      echo "Environment reset complete"
    mode: 0755
  when: "'controller' or 'loadbalancer' in inventory_hostname"

- name: Create reset-env.sh script for cleaning up worker VMs
  become: true
  copy:
    dest: reset-env.sh
    content: |
      #!/bin/bash

      # Brutal Force-Kill
      for service in kubectl kube-proxy kubelet; do \
        sudo systemctl stop $service.service
        sudo systemctl disable $service.service
      done

      # Clean services and files
      sudo rm -rf \
        {{ certs_dir }} \
        /etc/cni/net.d \
        /opt/cni/bin \
        /var/lib/kubelet \
        /var/lib/kube-proxy \
        /var/lib/kubernetes/* \
        /var/run/kubernetes/* \
        /etc/systemd/system/kubectl.service \
        /etc/systemd/system/kube-proxy.service \
        /etc/systemd/system/kubelet.service
      
      # Clean binaries
      sudo rm -rf /usr/local/bin/*

      echo "Environment reset complete"
    mode: 0755
  when: "'worker' in inventory_hostname"

- name: Distribute to controller
  ansible.builtin.include_tasks:
    file: controller.yml
  when: "'controller' in inventory_hostname"

- name: Distribute to worker
  ansible.builtin.include_tasks:
    file: worker.yml
  when: "'worker' in inventory_hostname"

- name: Distribute to loadbalancer
  ansible.builtin.include_tasks:
    file: loadbalancer.yml
  when: "'loadbalancer' in inventory_hostname"